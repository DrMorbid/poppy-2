// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Message from "../i18n/Message.bs.js";
import * as Core$Mui from "rescript-material-ui/src/Core.bs.js";
import * as Grid$Mui from "rescript-material-ui/src/Grid.bs.js";
import * as ReactIntl from "react-intl";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Contact_Map from "./Contact_Map.bs.js";
import * as Common_Style from "../common/Common_Style.bs.js";
import * as Common_Dialog from "../common/Common_Dialog.bs.js";
import * as Common_Constants from "../common/Common_Constants.bs.js";
import * as Core from "@material-ui/core";
import * as Styles from "@material-ui/styles";
import * as Common_OpenInNewButton from "../common/Common_OpenInNewButton.bs.js";
import * as Styles$1 from "@material-ui/core/styles";

var useStyles = Styles.makeStyles({
      mapSize: {
        height: "50%",
        width: "100%"
      }
    });

function Contact_Content_Simple(Props) {
  var match = React.useState(function () {
        
      });
  var setMapUrl = match[1];
  var mapUrl = match[0];
  var match$1 = React.useState(function () {
        return false;
      });
  var setIsMapBeingLoaded = match$1[1];
  var intl = ReactIntl.useIntl();
  var commonClasses = Common_Style.useStyles();
  useStyles();
  var isMdUp = Core.useMediaQuery(Core$Mui.Breakpoint.get(Styles$1.useTheme(), {
            NAME: "up",
            VAL: "md"
          }));
  var onClose = function (param) {
    Curry._1(setIsMapBeingLoaded, (function (param) {
            return false;
          }));
    Curry._1(setMapUrl, (function (param) {
            
          }));
  };
  var onMapLoadingFinished = function (param) {
    Curry._1(setIsMapBeingLoaded, (function (param) {
            return false;
          }));
  };
  var tmp = {
    isMapBeingLoaded: match$1[0],
    onMapLoadingFinished: onMapLoadingFinished
  };
  if (mapUrl !== undefined) {
    tmp.url = Caml_option.valFromOption(mapUrl);
  }
  return React.createElement(Core.Grid, {
              children: null,
              container: true
            }, React.createElement(Core.Grid, {
                  children: React.createElement(Core.Grid, {
                        children: null,
                        className: commonClasses.paragraphGap,
                        container: true
                      }, React.createElement(Core.Grid, {
                            children: React.createElement(Core.Grid, {
                                  children: null,
                                  container: true
                                }, React.createElement(Core.Grid, {
                                      children: React.createElement(Core.Typography, {
                                            children: intl.formatMessage(Message.Contact.registrationDatabaseTitle),
                                            className: commonClasses.bold
                                          }),
                                      item: true,
                                      xs: Grid$Mui.Xs[12]
                                    }), React.createElement(Core.Grid, {
                                      children: React.createElement(Core.Typography, {
                                            children: intl.formatMessage(Message.Contact.registrationDatabasePerson)
                                          }),
                                      item: true,
                                      xs: Grid$Mui.Xs[12]
                                    }), React.createElement(Core.Grid, {
                                      children: React.createElement(Core.Typography, {
                                            children: Common_Constants.infoPhone
                                          }),
                                      item: true,
                                      xs: Grid$Mui.Xs[12]
                                    }), React.createElement(Core.Grid, {
                                      children: React.createElement(Core.Typography, {
                                            children: Common_Constants.infoEmail
                                          }),
                                      item: true,
                                      xs: Grid$Mui.Xs[12]
                                    })),
                            item: true,
                            md: Grid$Mui.Md[4],
                            sm: Grid$Mui.Sm[6],
                            xs: Grid$Mui.Xs[12]
                          }), React.createElement(Core.Grid, {
                            children: React.createElement(Core.Grid, {
                                  children: null,
                                  container: true
                                }, React.createElement(Core.Grid, {
                                      children: React.createElement(Core.Typography, {
                                            children: intl.formatMessage(Message.Contact.clientsProductionDirectionTitle),
                                            className: commonClasses.bold
                                          }),
                                      item: true,
                                      xs: Grid$Mui.Xs[12]
                                    }), React.createElement(Core.Grid, {
                                      children: React.createElement(Core.Typography, {
                                            children: intl.formatMessage(Message.Contact.clientsProductionDirectionPerson)
                                          }),
                                      item: true,
                                      xs: Grid$Mui.Xs[12]
                                    }), React.createElement(Core.Grid, {
                                      children: React.createElement(Core.Typography, {
                                            children: Common_Constants.bossEmail
                                          }),
                                      item: true,
                                      xs: Grid$Mui.Xs[12]
                                    })),
                            item: true,
                            md: Grid$Mui.Md[4],
                            sm: Grid$Mui.Sm[6],
                            xs: Grid$Mui.Xs[12]
                          }), React.createElement(Core.Grid, {
                            children: React.createElement(Core.Grid, {
                                  children: null,
                                  container: true
                                }, React.createElement(Core.Grid, {
                                      children: React.createElement(Core.Typography, {
                                            children: intl.formatMessage(Message.Contact.studioRegistrationsTitle),
                                            className: commonClasses.bold
                                          }),
                                      item: true,
                                      xs: Grid$Mui.Xs[12]
                                    }), React.createElement(Core.Grid, {
                                      children: React.createElement(Common_OpenInNewButton.make, {
                                            label: Message.Contact.registrationAddress,
                                            onClick: (function (param) {
                                                var mapUrl = Common_Constants.registrationAddressMapUrl;
                                                Curry._1(setIsMapBeingLoaded, (function (param) {
                                                        return true;
                                                      }));
                                                return Curry._1(setMapUrl, (function (param) {
                                                              return mapUrl;
                                                            }));
                                              })
                                          }),
                                      item: true,
                                      xs: Grid$Mui.Xs[12]
                                    })),
                            item: true,
                            md: Grid$Mui.Md[4],
                            xs: Grid$Mui.Xs[12]
                          }), React.createElement(Core.Grid, {
                            children: React.createElement(Core.Grid, {
                                  children: React.createElement(Core.Grid, {
                                        children: React.createElement(Core.Typography, {
                                              children: intl.formatMessage(Message.Contact.castingsInfo)
                                            }),
                                        item: true,
                                        xs: Grid$Mui.Xs[12]
                                      }),
                                  container: true
                                }),
                            item: true,
                            xs: Grid$Mui.Xs[12]
                          })),
                  item: true,
                  xs: Grid$Mui.Xs[12]
                }), React.createElement(Common_Dialog.make, {
                  isOpen: Belt_Option.isSome(mapUrl),
                  onClose: onClose,
                  children: React.createElement(Contact_Map.make, tmp),
                  fullScreen: !isMdUp,
                  fixedSize: isMdUp
                }));
}

var make = Contact_Content_Simple;

export {
  useStyles ,
  make ,
}
/* useStyles Not a pure module */
