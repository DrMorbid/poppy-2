// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as JsxRuntime from "react/jsx-runtime";

function Make(Config) {
  var t = React.createContext(Config.defaultValue);
  var make = t.Provider;
  var Provider = {
    make: make
  };
  return {
          t: t,
          Provider: Provider
        };
}

var initialState = {
  activeMenuItem: /* Home */0,
  latestNewsClosed: false
};

function reducer(state, action) {
  if (action) {
    return {
            activeMenuItem: action._0,
            latestNewsClosed: state.latestNewsClosed
          };
  } else {
    return {
            activeMenuItem: state.activeMenuItem,
            latestNewsClosed: true
          };
  }
}

function defaultValue_1(param) {
  
}

var defaultValue = [
  initialState,
  defaultValue_1
];

var t = React.createContext(defaultValue);

var make = t.Provider;

var Provider = {
  make: make
};

var Context = {
  t: t,
  Provider: Provider
};

function App_Context$Provider(props) {
  var match = React.useReducer(reducer, initialState);
  return JsxRuntime.jsx(make, {
              value: [
                match[0],
                match[1]
              ],
              children: props.children
            });
}

var Provider$1 = {
  make: App_Context$Provider
};

export {
  Make ,
  initialState ,
  reducer ,
  Context ,
  Provider$1 as Provider,
}
/* t Not a pure module */
